/** vim: filetype=icinga2
 * SPDX-FileCopyrightText: none
 * SPDX-License-Identifier: CC0-1.0
 */

template CheckCommand "routeros_command" {
	import "ipv4-or-ipv6"

	command = [ PluginContribDir + "/check_routeros.py" ]
	arguments = {
		"--host" = {
			value = "$routeros_address$"
			required = true
			order = -2
		}
		"--hostname" = {
			value = "$routeros_hostname$"
			order = -2
		}
		"--port" = {
			value = "$routeros_port$"
			order = -2
		}
		"--username" = {
			value = "$routeros_username$"
			required = true
			order = -2
		}
		"--password" = {
			value = "$routeros_password$"
			required = true
			order = -2
		}
		"--ssl" = {
			set_if = "$routeros_ssl$"
			order = -2
		}
/*
		"--no-ssl" = {
			order = -2
		}
*/
		"--ssl-cafile" = {
			value = "$routeros_ssl_cafile$"
			order = -2
		}
		"--ssl-capath" = {
			value = "$routeros_ssl_capath$"
			order = -2
		}
		"--ssl-force-no-certificate" = {
			set_if = "$routeros_ssl_force_no_certificate$"
			order = -2
		}
		"--ssl-verify" = {
			set_if = "$routeros_ssl_verify$"
			order = -2
		}
/*
		"--no-ssl-verify" = {
			order = -2
		}
*/
		"--ssl-verify-hostname" = {
			set_if = "$routeros_ssl_verify_hostname$"
			order = -2
		}
/*
		"--no-ssl-verify-hostname" = {
		}
*/
		"command" = {
			value = "$routeros_command$"
			skip_key = true
			order = -1
		}
	}

	vars.routeros_address = "$check_address$"
}


object CheckCommand "routeros_interface" {
	import "routeros_command"

	arguments += {
		"--name" = {
			value = "$routeros_interface_name$"
		}
		"--regex" = {
			set_if = "$routeros_interface_regex$"
		}
		"--single" = {
			set_if = "$routeros_interface_single$"
		}
		"--ignore-disabled" = {
			set_if = "$routeros_interface_ignore_disabled$"
		}
		"--cookie-filename" = {
			value = "$routeros_interface_cookie_filename$"
		}
		"--value-override" = {
			value = "$routeros_interface_value_override$"
      repeat_key = true
		}
		"--value-warning" = {
			value = "$routeros_interface_value_warning$"
      repeat_key = true
		}
		"--value-critical" = {
			value = "$routeros_interface_value_critical$"
      repeat_key = true
		}
	}

	vars.routeros_command = "interface"
}


object CheckCommand "routeros_interface_gre" {
	import "routeros_command"

	arguments += {
		"--name" = {
			value = "$routeros_interface_gre_name$"
      repeat_key = true
		}
		"--regex" = {
			set_if = "$routeros_interface_gre_regex$"
		}
		"--single" = {
			set_if = "$routeros_interface_gre_single$"
		}
		"--ignore-disabled" = {
			set_if = "$routeros_interface_gre_ignore_disabled$"
		}
	}

	vars.routeros_command = "interface.gre"
	vars.routeros_interface_gre_ignore_disabled = true
}

object CheckCommand "routeros_interface_vrrp" {
	import "routeros_command"

	arguments += {
		"--name" = {
			value = "$routeros_interface_vrrp_name$"
			required = true
		}
		"--master" = {
			value = "$routeros_interface_vrrp_master$"
		}
	}

	vars.routeros_command = "interface.vrrp"
}

object CheckCommand "routeros_routing_bgp_peer" {
	import "routeros_command"

	arguments += {
		"--name" = {
			value = "$routeros_routing_bgp_peer_name$"
      repeat_key = true
		}
		"--regex" = {
			set_if = "$routeros_routing_bgp_peer_regex$"
		}
		"--single" = {
			set_if = "$routeros_routing_bgp_peer_single$"
		}
	}

	vars.routeros_command = "routing.bgp.peers"
}


object CheckCommand "routeros_routing_ospf_neighbor" {
	import "routeros_command"

	arguments += {
		"--instance" = {
			value = "$routeros_routing_ospf_neighbor_instance$"
			required = true
		}
		"--router-id" = {
			value = "$routeros_routing_ospf_neighbor_router_id$"
			required = true
		}
	}

	vars.routeros_command = "routing.ospf.neighbors"
}

object CheckCommand "routeros_system_clock" {
	import "routeros_command"

	arguments += {
		"--warning" = {
			value = "$routeros_system_clock_warning$"
		}
		"--critical" = {
			value = "$routeros_system_clock_critical$"
		}
	}

	vars.routeros_command = "system.clock"
}

object CheckCommand "routeros_system_cpu" {
	import "routeros_command"

	arguments += {
		"--load-warning" = {
			value = "$routeros_system_cpu_load_warning$"
		}
		"--load-critical" = {
			value = "$routeros_system_cpu_load_critical$"
		}
		"--value-warning" = {
			value = "$routeros_system_cpu_value_warning$"
      repeat_key = true
		}
		"--value-critical" = {
			value = "$routeros_system_cpu_value_critical$"
      repeat_key = true
		}
		"--regex" = {
			set_if = "$routeros_system_cpu_regex$"
		}
	}

	vars.routeros_command = "system.cpu"
}

object CheckCommand "routeros_system_fan" {
	import "routeros_command"

	arguments += {
		"--value-warning" = {
			value = "$routeros_system_fan_value_warning$"
      repeat_key = true
		}
		"--value-critical" = {
			value = "$routeros_system_fan_value_critical$"
      repeat_key = true
		}
		"--regex" = {
			set_if = "$routeros_system_fan_regex$"
		}
	}

	vars.routeros_command = "system.fan"
}

object CheckCommand "routeros_system_license" {
	import "routeros_command"

	arguments += {
		"--deadline-warning" = {
			value = "$routeros_system_licsense_deadline_warning$"
		}
		"--deadline-critical" = {
			value = "$routeros_system_license_deadline_critical$"
		}
		"--next-renewal-warning" = {
			value = "$routeros_system_license_next_renewal_warning$"
		}
		"--next-renewal-critical" = {
			value = "$routeros_system_license_next_renewal_critical$"
		}
		"--level" = {
			value = "$routeros_system_license_levels$"
      repeat_key = true
		}
	}

	vars.routeros_command = "system.license"
}


object CheckCommand "routeros_system_memory" {
	import "routeros_command"

	arguments += {
		"--warning" = {
			value = "$routeros_system_memory_warning$"
		}
		"--critical" = {
			value = "$routeros_system_memory_critical$"
		}
	}

	vars.routeros_command = "system.memory"
}


object CheckCommand "routeros_system_ntp_client" {
	import "routeros_command"

	arguments += {
		"--last-update-before-warning" = {
			value = "$routeros_system_ntp_client_last_update_before_warning$"
		}
		"--last-update-before-critical" = {
			value = "$routeros_system_ntp_client_last_update_before_critical$"
		}
		"--offset-warning" = {
			value = "$routeros_system_ntp_client_offset_warning$"
		}
		"--offset-critical" = {
			value = "$routeros_system_ntp_client_offset_critical$"
		}
		"--stratum-warning" = {
			value = "$routeros_system_ntp_client_stratum_warning$"
		}
		"--stratum-critical" = {
			value = "$routeros_system_ntp_client_stratum_critical$"
		}
		"--expected-server" = {
			value = "$routeros_system_ntp_client_expected_server$"
			repeat_key = true
		}
	}

	vars.routeros_command = "system.ntp.client"
}

object CheckCommand "routeros_system_power" {
	import "routeros_command"

	arguments += {
		"--warning" = {
			value = "$routeros_system_power_warning$"
		}
		"--critical" = {
			value = "$routeros_system_power_critical$"
		}
	}

	vars.routeros_command = "system.power"
}

object CheckCommand "routeros_system_psu" {
	import "routeros_command"

	arguments += {
		"--value-warning" = {
			value = "$routeros_system_psu_value_warning$"
      repeat_key = true
		}
		"--value-critical" = {
			value = "$routeros_system_psu_value_critical$"
      repeat_key = true
		}
	}

	vars.routeros_command = "system.psu"
}

object CheckCommand "routeros_system_temperature" {
	import "routeros_command"

	arguments += {
		"--value-warning" = {
			value = "$routeros_system_temperature_value_warning$"
      repeat_key = true
		}
		"--value-critical" = {
			value = "$routeros_system_temperature_value_critical$"
      repeat_key = true
		}
		"--regex" = {
			set_if = "$routeros_system_temperature_regex$"
		}
	}

	vars.routeros_command = "system.temperature"
}

object CheckCommand "routeros_system_uptime" {
	import "routeros_command"

	arguments += {
	}

	vars.routeros_command = "system.uptime"
}


object CheckCommand "routeros_tool_ping" {
	import "routeros_command"

	arguments += {
		"--address" = {
			value = "$routeros_tool_ping_address$"
			required = true
		}
		"--packet-loss-warning" = {
			value = "$routeros_tool_ping_packet_loss_warning$"
		}
		"--packet-loss-critical" = {
			value = "$routeros_tool_ping_packet_loss_critical$"
		}
		"--ttl-warning" = {
			value = "$routeros_tool_ping_ttl_warning$"
		}
		"--ttl-critical" = {
			value = "$routeros_tool_ping_ttl_critical$"
		}
	}

	vars.routeros_command = "tool.ping"
}
